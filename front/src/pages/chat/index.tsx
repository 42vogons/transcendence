import Head from 'next/head'
import Image from 'next/image'

import {
	ChatContainer,
	ChatHeader,
	ChatHeaderTextContainer,
	ChatInputContainer,
	ChatMenu,
	ChatMessage,
	ChatMessageContainer,
	ChatSubTitle,
	ChatTitle,
} from '@/styles/pages/chat'

import { MdSend } from 'react-icons/md'
import { SlOptionsVertical } from 'react-icons/sl'

import userDefaulAvatar from 'public/assets/user.png'
import { FormEvent, ReactElement, useEffect, useRef, useState } from 'react'
import Layout from '@/components/layout'

interface iMessage {
	sender: string
	content: string
	timestamp: string
}

export default function Chat() {
	const messagesEndRef = useRef(null)

	const date = Date.now()
	const message1: iMessage = {
		sender: 'acarneir',
		content:
			'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Velit sit deserunt praesentium nemo accusantium ratione error, quas quaerat omnis perspiciatis est quidem, earum ullam ad dolorum quis optio. Beatae, harum!',
		timestamp: (date - 10 * 60 * 1000).toLocaleString(),
	}

	const message2: iMessage = {
		sender: 'rfelipe-',
		content:
			'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Velit sit deserunt praesentium nemo accusantium ratione error, quas quaerat omnis perspiciatis est quidem, earum ullam ad dolorum quis optio. Beatae, harum!',
		timestamp: (date + 10 * 60 * 1000).toLocaleString(),
	}

	const chat = [
		message1,
		message2,
		message2,
		message2,
		message1,
		message1,
		message1,
		message2,
		message1,
		message2,
	]
	const loggedUser = 'acarneir'

	const [input, setInput] = useState('')

	function handleSubmit(e: FormEvent<HTMLFormElement>) {
		e.preventDefault()
		console.log(e)
		console.log(input)
	}

	function scrollToBottom(behavior: 'smooth' | 'instant' = 'instant') {
		// eslint-disable-next-line prettier/prettier
		(messagesEndRef.current as unknown as HTMLElement).scrollIntoView({
			behavior,
		})
	}

	useEffect(() => {
		scrollToBottom()
	}, [])

	return (
		<>
			<Head>
				<title>Transcendence - Pong</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<ChatContainer>
				<ChatHeader>
					<ChatHeaderTextContainer>
						<Image
							src={userDefaulAvatar.src}
							width={40}
							height={40}
							priority={true}
							alt="user"
						/>
						<ChatTitle>rfelipe-</ChatTitle>
						{/* <ChatSubTitle>online</ChatSubTitle> */}
					</ChatHeaderTextContainer>
					<ChatMenu>
						<SlOptionsVertical size={30} />
					</ChatMenu>
				</ChatHeader>
				<ChatMessageContainer>
					{chat.length > 0 ? (
						chat.map((message, index) => (
							<ChatMessage
								key={index}
								isLoggedUser={message.sender === loggedUser}
							>
								{message.sender !== loggedUser && (
									<p>
										<b>{message.sender}</b>
									</p>
								)}
								<p>{message.content}</p>
							</ChatMessage>
						))
					) : (
						<>vazio</>
					)}
					<div ref={messagesEndRef} />
				</ChatMessageContainer>
				<ChatInputContainer onSubmit={(e) => handleSubmit(e)}>
					<input
						type="text"
						value={input}
						onChange={(e) => setInput(e.target.value)}
					/>
					<button>
						<MdSend size={48} />
					</button>
				</ChatInputContainer>
			</ChatContainer>
		</>
	)
}

Chat.getLayout = (page: ReactElement) => {
	return <Layout>{page}</Layout>
}
