import Head from 'next/head'
import Image from 'next/image'

import {
	ChatContainer,
	ChatHeader,
	ChatHeaderTextContainer,
	ChatInputContainer,
	ChatMenu,
	ChatMenuWrapper,
	ChatMessage,
	ChatMessageContainer,
	ChatMessageTimestamp,
	ChatSubTitle,
	ChatTitle,
	MenuAction,
	SenderMenu,
	SenderMenuWrapper,
} from '@/styles/pages/chat'

import { MdSend } from 'react-icons/md'
import { SlOptionsVertical } from 'react-icons/sl'

import userDefaulAvatar from 'public/assets/user.png'
import { FormEvent, ReactElement, useEffect, useRef, useState } from 'react'
import Layout from '@/components/layout'
import {
	MenuArrow,
	MenuContent,
	MenuItem,
} from '@/styles/components/friendListItem'
import { FaGamepad, FaUserAstronaut } from 'react-icons/fa6'
import { BsChatSquareTextFill } from 'react-icons/bs'

interface iMessage {
	sender: string
	content: string
	timestamp: number
}

export default function Chat() {
	const messagesEndRef = useRef(null)
	const menuIconSize = 26

	const date = new Date()
	const message1: iMessage = {
		sender: 'acarneir',
		content:
			'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Velit sit deserunt praesentium nemo accusantium ratione error, quas quaerat omnis perspiciatis est quidem, earum ullam ad dolorum quis optio. Beatae, harum!',
		timestamp: date.getTime() - 10 * 60 * 1000,
	}

	const message2: iMessage = {
		sender: 'rfelipe-',
		content:
			'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Velit sit deserunt praesentium nemo accusantium ratione error, quas quaerat omnis perspiciatis est quidem, earum ullam ad dolorum',
		timestamp: date.getTime() + 10 * 60 * 1000,
	}

	const chat = [
		message1,
		message2,
		message2,
		message2,
		message1,
		message1,
		message1,
		message2,
		message1,
		message2,
	]
	const loggedUser = 'acarneir'

	const [input, setInput] = useState('')

	function handleSubmit(e: FormEvent<HTMLFormElement>) {
		e.preventDefault()
		console.log(e)
		console.log(input)
	}

	function scrollToBottom(behavior: 'smooth' | 'instant' = 'instant') {
		// eslint-disable-next-line prettier/prettier
		(messagesEndRef.current as unknown as HTMLElement).scrollIntoView({
			behavior,
		})
	}

	useEffect(() => {
		scrollToBottom()
	}, [])

	return (
		<>
			<Head>
				<title>Transcendence - Pong</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<ChatContainer>
				<ChatHeader>
					<ChatHeaderTextContainer>
						<Image
							src={userDefaulAvatar.src}
							width={40}
							height={40}
							priority={true}
							alt="user"
						/>
						<ChatTitle>rfelipe-</ChatTitle>
						{/* <ChatSubTitle>online</ChatSubTitle> */}
					</ChatHeaderTextContainer>
					<ChatMenuWrapper>
						<ChatMenu>
							<SlOptionsVertical size={28} />
						</ChatMenu>
						<MenuContent>
							<MenuArrow />
							<MenuItem>
								<MenuAction
									onClick={() => {
										console.log('play')
									}}
								>
									<FaGamepad size={menuIconSize} /> Play
								</MenuAction>
							</MenuItem>
							<MenuItem>
								<MenuAction
									onClick={() => {
										console.log('play')
									}}
								>
									<BsChatSquareTextFill size={menuIconSize} />{' '}
									Chat
								</MenuAction>
							</MenuItem>
						</MenuContent>
					</ChatMenuWrapper>
				</ChatHeader>
				<ChatMessageContainer>
					{chat.length > 0 ? (
						chat.map((message, index) => (
							<ChatMessage
								key={index}
								isLoggedUser={message.sender === loggedUser}
							>
								{message.sender !== loggedUser && (
									<SenderMenuWrapper>
										<SenderMenu>
											<FaUserAstronaut size={28} />
											{message.sender}
										</SenderMenu>
										<MenuContent>
											<MenuArrow />
											<MenuItem>
												<MenuAction
													onClick={() => {
														console.log('play')
													}}
												>
													<FaGamepad
														size={menuIconSize}
													/>{' '}
													Play
												</MenuAction>
											</MenuItem>
											<MenuItem>
												<MenuAction
													onClick={() => {
														console.log('profile')
													}}
												>
													<FaUserAstronaut
														size={menuIconSize}
													/>{' '}
													Profile
												</MenuAction>
											</MenuItem>
										</MenuContent>
									</SenderMenuWrapper>
								)}
								<p>{message.content}</p>
								<ChatMessageTimestamp>
									{new Date(message.timestamp)
										.toLocaleString('en-CA', {
											hour: '2-digit',
											minute: '2-digit',
											second: '2-digit',
											year: 'numeric',
											month: '2-digit',
											day: '2-digit',
											hour12: false,
										})
										.replace(',', ' ')}
								</ChatMessageTimestamp>
							</ChatMessage>
						))
					) : (
						<>vazio</>
					)}
					<div ref={messagesEndRef} />
				</ChatMessageContainer>
				<ChatInputContainer onSubmit={(e) => handleSubmit(e)}>
					<input
						type="text"
						value={input}
						onChange={(e) => setInput(e.target.value)}
					/>
					<button>
						<MdSend size={48} />
					</button>
				</ChatInputContainer>
			</ChatContainer>
		</>
	)
}

Chat.getLayout = (page: ReactElement) => {
	return <Layout>{page}</Layout>
}
