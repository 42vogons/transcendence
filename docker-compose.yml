version: '3'

services:
    db:
        image: postgres:latest
        container_name: transcendence_db
        restart: unless-stopped
        env_file:
            - .env
        volumes:
            - type: volume
              source: dbtranscendence
              target: /var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - 5432:${DB_PORT}
        networks:
            - transcendence 

    front:
        build:
            context: ./front
            args:
                - NEXT_PUBLIC_FRONT_DOMAIN=${FRONT_DOMAIN}
                - NEXT_PUBLIC_BACK_HOST=${BACK_HOST}
                - CLIENT_ID=${CLIENT_ID}
        image: transcendence_front
        container_name: transcendence_front
        restart: unless-stopped
        depends_on:
            - back
        env_file:
            - .env
        environment:
            NEXT_PUBLIC_BACK_HOST: ${BACK_HOST}
        ports:
            - 3000:${FRONT_PORT}
        networks:
            - transcendence 

    back:
        build:
            context: ./back
            args:
                - BACK_DOMAIN=${BACK_DOMAIN}
                - INTRA_URL_TOKEN=${INTRA_URL_TOKEN}
                - INTRA_URL_PROFILE=${INTRA_URL_PROFILE}
        image: transcendence_back
        container_name: transcendence_back
        restart: unless-stopped
        depends_on:
            - db
        env_file:
            - .env
        environment:
            DB_HOST: ${DB_HOST}
            DATABASE_URL: ${DATABASE_URL}
        ports:
            - 3001:${BACK_PORT}
            - 5555:5555
        volumes:
            - ./back:/srcs
        networks:
            - transcendence
        command: >
            sh -c "npx prisma generate && 
            npx prisma migrate deploy && 
            npm run start"

volumes:
  dbtranscendence:

networks:
    transcendence:
        driver: bridge
